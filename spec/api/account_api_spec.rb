=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AccountApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AccountApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountApi' do
    it 'should create an instance of AccountApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AccountApi)
    end
  end

  # unit tests for activate_account
  # Activate an Account
  # New accounts need to be activated to confirm Terms and Conditions have been accepted.\\n
  # @param [Hash] opts the optional parameters
  # @option opts [User] :body 
  # @option opts [String] :brand_code 
  # @return [User]
  describe 'activate_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_email_address_account
  # Change Email Address
  # The user.PendingEmailAddress will be set to the give address and a  new verification email will be sent.\\n  Once the link in the email is clicked on then the user account will be updated to use the new email address
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email_address 
  # @return [User]
  describe 'change_email_address_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_api_key_account
  # Create ApiKey
  # Creates a new APIKey. The only property that&#x27;s required or used is Name.\\n  A new ApiKey will be generated and returned to you.
  # @param [Hash] opts the optional parameters
  # @option opts [Item] :body 
  # @return [Item]
  describe 'create_api_key_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_demo_employer_account
  # Create Demo Employer
  # Creates a demo employer for the user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_demo_employer_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_api_key_account
  # Delete ApiKey
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_api_key_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account
  # Get Account Details
  # Returns the details for the authorised account.\\n
  # @param [Hash] opts the optional parameters
  # @option opts [String] :defaults You can leave this empty, it&#x27;s for internal use only.
  # @option opts [String] :defaults_key You can leave this empty, it&#x27;s for internal use only.
  # @return [User]
  describe 'get_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_key_account
  # Get ApiKey
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Item]
  describe 'get_api_key_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_employer_defaults_account
  # Get EmployerDefaults
  # Get the EmployerDefaults for the currently authorised User.
  # @param [Hash] opts the optional parameters
  # @return [EmployerDefaults]
  describe 'get_employer_defaults_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invitations_account
  # Get Invitations
  # Returns any pending Invitations for the authorised user.\\n  If the email address isn&#x27;t yet verified then the Name displayed in the Item will be the users  email address instead of the company name.\\n  Invitations cannot be accepted until the email address for the user is verified.
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'get_invitations_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tenant_account
  # Get Tenant
  # Returns branding details for the specified tenant. This is used by the web app and is unlikely to be used by third-parties.\\n
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_id 
  # @option opts [String] :key 
  # @return [Tenant]
  describe 'get_tenant_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_api_keys_account
  # List ApiKeys
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'list_api_keys_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for profile_account
  # Update Profile
  # Updates your profile. Only FirstName and LastName fields are updated.
  # @param [Hash] opts the optional parameters
  # @option opts [User] :body 
  # @return [User]
  describe 'profile_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_employer_defaults_account
  # Set EmployerDefaults
  # Set the EmployerDefaults for the currently authorised User.
  # @param [Hash] opts the optional parameters
  # @option opts [EmployerDefaults] :body 
  # @return [EmployerDefaults]
  describe 'set_employer_defaults_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cookie_preferences_account
  # Update Cookie Preferences
  # Updates cookie preferences for your account.
  # @param [Hash] opts the optional parameters
  # @option opts [CookiePreference] :body 
  # @return [CookiePreference]
  describe 'update_cookie_preferences_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_photo_account
  # Update Photo
  # Submit an image here and we&#x27;ll upload it, resize it to 200px squared and set it as the image for your account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :file 
  # @return [User]
  describe 'update_photo_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_account
  # Re-send Verification Email
  # Users should receive an email to verify their email address when they first register or if they change their email address.\\n  However, this API endpoint can be used to re-send the email.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'verify_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_response_account
  # Verify Email Address
  # Used to process the link sent in an email to verify an email address.\\n
  # @param [Hash] opts the optional parameters
  # @option opts [String] :u The value from the link in the email.
  # @option opts [String] :k The value from the link in the email.
  # @return [BOOLEAN]
  describe 'verify_response_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
