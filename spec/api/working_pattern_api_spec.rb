=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::WorkingPatternApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'WorkingPatternApi' do
  before do
    # run before each test
    @instance = SwaggerClient::WorkingPatternApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WorkingPatternApi' do
    it 'should create an instance of WorkingPatternApi' do
      expect(@instance).to be_instance_of(SwaggerClient::WorkingPatternApi)
    end
  end

  # unit tests for create_working_pattern
  # Create WorkingPattern
  # Creates a new WorkingPattern for the Employer.
  # @param employer_id 
  # @param [Hash] opts the optional parameters
  # @option opts [WorkingPattern] :body 
  # @return [WorkingPattern]
  describe 'create_working_pattern test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_working_pattern
  # Delete WorkingPattern
  # Deletes the specified WorkingPattern.
  # @param employer_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_working_pattern test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_working_pattern
  # Get WorkingPattern
  # Gets the WorkingPattern specified.
  # @param employer_id The Id of the Employer to which the WorkingPattern belongs.
  # @param id The id of the WorkingPattern you want to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [WorkingPattern]
  describe 'get_working_pattern test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_working_pattern
  # List WorkingPatterns
  # Lists all WorkingPattern for the Employer specified.
  # @param employer_id The Id of the Employer for which you want to list WorkingPattern
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'index_working_pattern test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_working_pattern
  # Update WorkingPattern
  # Updates the details of an existing WorkingPattern.
  # @param employer_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [WorkingPattern] :body 
  # @return [WorkingPattern]
  describe 'update_working_pattern test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
