=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::OpeningBalancesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OpeningBalancesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::OpeningBalancesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OpeningBalancesApi' do
    it 'should create an instance of OpeningBalancesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::OpeningBalancesApi)
    end
  end

  # unit tests for get_nic_summaries_opening_balances
  # Get NicSummaries
  # Returns the NicSummaries for an Employee for a given TaxYear.\\n  If the TaxYear is the same as on their OpeningBalances then the NicSummaries will be the same as shown there.
  # @param employer_id The Id of the Employer to which the Employee belongs
  # @param employee_id The Id of the Employee for which you want to retrieve Opening Balances
  # @param tax_year The TaxYear the NicSummaries apply to
  # @param [Hash] opts the optional parameters
  # @return [Array<NicSummary>]
  describe 'get_nic_summaries_opening_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_opening_balances
  # Get Opening Balances
  # Returns the Opening Balances for an Employee
  # @param employer_id The Id of the Employer to which the Employee belongs
  # @param employee_id The Id of the Employee for which you want to retrieve Opening Balances
  # @param [Hash] opts the optional parameters
  # @return [OpeningBalances]
  describe 'get_opening_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_nic_summaries_opening_balances
  # Update NicSummaries
  # Updates the NicSummaries for an Employee for a given TaxYear.\\n  If the TaxYear is the same as on their OpeningBalances then the NicSummaries there will also be updated.
  # @param employer_id The Id of the Employer to which the Employee belongs
  # @param employee_id The Id of the Employee for which you want to retrieve Opening Balances
  # @param tax_year The TaxYear the NicSummaries apply to
  # @param [Hash] opts the optional parameters
  # @option opts [Array<NicSummary>] :body 
  # @return [Array<NicSummary>]
  describe 'update_nic_summaries_opening_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_opening_balances
  # Update Opening Balances
  # Updates the Opening Balances for an Employee.
  # @param employer_id The Id of the Employer to which the Employee belongs
  # @param employee_id The Id of the Employee for which you want to update Opening Balances
  # @param [Hash] opts the optional parameters
  # @option opts [OpeningBalances] :body 
  # @return [OpeningBalances]
  describe 'update_opening_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_p45_opening_balances
  # Update P45 Value
  # Updates the P45 Values on the Opening Balances for an Employee.\\n  This would ideally be done when the Opening Balances are updated but if payruns have already been started for the employee then Opening Balances can&#x27;t be updated - hence this API call just to update the P45 values.\\n  There must be a currently open PayRun for the employee.\\n  Only the PreviousEmployerGross and PreviousEmployerTax properties of the submitted OpeningBalances model are updated.
  # @param employer_id The Id of the Employer to which the Employee belongs
  # @param employee_id The Id of the Employee for which you want to update P45 figures
  # @param [Hash] opts the optional parameters
  # @option opts [OpeningBalances] :body 
  # @return [OpeningBalances]
  describe 'update_p45_opening_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_termination_payments_opening_balances
  # Update Termination Pay
  # Updates the Termination Pay value on the Opening Balances for an Employee.\\n  This would ideally be done when the Opening Balances are updated but if payruns have already been started for the employee then Opening Balances can&#x27;t be updated - hence this API call just to update the Termination Pay value.\\n  Only the TerminationPayments property of the submitted OpeningBalances model is updated.
  # @param employer_id The Id of the Employer to which the Employee belongs
  # @param employee_id The Id of the Employee for which you want to update Termination Payments
  # @param [Hash] opts the optional parameters
  # @option opts [OpeningBalances] :body 
  # @return [OpeningBalances]
  describe 'update_termination_payments_opening_balances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
