=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::BenefitsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BenefitsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::BenefitsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BenefitsApi' do
    it 'should create an instance of BenefitsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::BenefitsApi)
    end
  end

  # unit tests for create_benefits
  # Create Benefit
  # Creates a Benefit for the Employee
  # @param employer_id 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Benefit] :body 
  # @return [nil]
  describe 'create_benefits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_benefits
  # Delete Benefit
  # Deletes the Benefit specified by the Id for the Employee specified by the EmployeeId
  # @param employer_id 
  # @param employee_id 
  # @param id The Id of the Benefit you want to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_benefits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_benefits
  # Get Benefit
  # Gets the Benefit specified by the Id for the Employee specified by the EmployeeId
  # @param employer_id 
  # @param employee_id 
  # @param id The Id of the Benefit you want to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [Benefit]
  describe 'get_benefits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_benefits
  # List Benefits
  # Lists all Benefits for the Employee
  # @param employer_id 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'index_benefits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_benefits
  # Update Benefit
  # @param employer_id 
  # @param employee_id 
  # @param id The Id of the Benefit you want to update.
  # @param [Hash] opts the optional parameters
  # @option opts [Benefit] :body 
  # @return [Benefit]
  describe 'update_benefits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
