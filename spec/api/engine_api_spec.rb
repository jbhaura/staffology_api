=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::EngineApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EngineApi' do
  before do
    # run before each test
    @instance = SwaggerClient::EngineApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EngineApi' do
    it 'should create an instance of EngineApi' do
      expect(@instance).to be_instance_of(SwaggerClient::EngineApi)
    end
  end

  # unit tests for calculate_ni_engine
  # Calculate NI due.
  # Calculates National Insurance Contributions due given the values specified.\\n  You would never need to use this API call in practice. It is provided just for information and testing purposes.\\n  Access is limited so you&#x27;ll probably receive a 401 response if you try to use it.
  # @param [Hash] opts the optional parameters
  # @option opts [TaxYear] :tax_year If not provided then current tax year will be used.
  # @option opts [Float] :gross The gross amount for which tax should be calculated.
  # @option opts [String] :ni_category The letter from the NI table
  # @option opts [PayPeriods] :pay_period The PayPeriod (Weekly, Monthly, etc)
  # @return [NationalInsuranceCalculation]
  describe 'calculate_ni_engine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for calculate_tax_engine
  # Calculate Tax due.
  # Calculates tax amount due, given the values specified.\\n  You would never need to use this API call. It is provided just for information and testing purposes.\\n  Access is limited so you&#x27;ll probably receive a 401 response if you try to use it.
  # @param [Hash] opts the optional parameters
  # @option opts [TaxYear] :tax_year If not provided then current tax year will be used.
  # @option opts [String] :tax_code If not provided then the default code for the tax year will be used.
  # @option opts [Float] :gross The gross amount for which tax should be calculated.
  # @option opts [DateTime] :period_start 
  # @option opts [DateTime] :period_end 
  # @option opts [PayPeriods] :pay_period The PayPeriod (Weekly, Monthly, etc)
  # @option opts [Integer] :period The period that this payment is being made for
  # @option opts [BOOLEAN] :week1 If set to true then tax will be calculated in a Week1/Month1 basis
  # @option opts [Float] :gross_to_date Gross pay to date
  # @option opts [Float] :tax_to_date Tax paid to date
  # @return [Float]
  describe 'calculate_tax_engine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for config_engine
  # Get Configuration
  # Returns the raw configuration data that is used as the basis for any calculations for the given tax year.\\nYou would never need to use this configuration values yourself in any API calls. It is provided just for information purposes
  # @param [Hash] opts the optional parameters
  # @option opts [TaxYear] :tax_year The year that you want to retrieve details for. If not provided then current tax year will be used.
  # @return [TaxYearConfig]
  describe 'config_engine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tenant_branding_engine
  # Tenant Branding
  # Returns Tenant Branding. Not for public use, will return 401
  # @param brand_code The Id of the Tenant you want to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [Tenant]
  describe 'get_tenant_branding_engine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for period_values_engine
  # Get Configuration
  # Returns the National Insurance thresholds for the given PayPeriod
  # @param tax_year The year that you want to retrieve details for.
  # @param pay_period The PayPeriod (ie, monthly) that you want to retrieve details for.
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :period_start 
  # @option opts [DateTime] :period_end 
  # @return [PeriodValues]
  describe 'period_values_engine test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
