=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PayScheduleApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PayScheduleApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PayScheduleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PayScheduleApi' do
    it 'should create an instance of PayScheduleApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PayScheduleApi)
    end
  end

  # unit tests for create_pay_schedule
  # Create a PaySchedule
  # Create PaySchedule using a certain pay frequency.
  # @param employer_id The Id of the Employer for which you want to update the PaySchedule
  # @param pay_period The PayPeriod (ie, Monthly) that you want to update details for.
  # @param tax_year The year that the PaySchedule is for.
  # @param [Hash] opts the optional parameters
  # @option opts [PaySchedule] :body 
  # @option opts [Integer] :ordinal Optionally specify the second, third, fourth (etc) PaySchedule for this PayPeriod. Defaults to 1 (first)
  # @return [nil]
  describe 'create_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_pay_schedule
  # Delete PaySchedule
  # Delete the PaySchedule for the PayPeriod and TaxYear specified.
  # @param employer_id The Id of the Employer for which you want to get the PaySchedule
  # @param pay_period The PayPeriod (ie, Monthly) that you want to retrieve details for.
  # @param tax_year The year that you want to retrieve details for.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :ordinal Optionally specify the second, third, fourth (etc) PaySchedule for this PayPeriod. Defaults to 1 (first)
  # @return [nil]
  describe 'delete_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_pay_schedule
  # Get PaySchedules
  # Get all PaySchedules for the given TaxYear.
  # @param employer_id The Id of the Employer for which you want to get the PaySchedule
  # @param tax_year The year that you want to retrieve details for.
  # @param [Hash] opts the optional parameters
  # @return [Array<PaySchedule>]
  describe 'get_all_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pay_schedule
  # Get PaySchedule
  # Get the PaySchedule for the PayPeriod and TaxYear specified.
  # @param employer_id The Id of the Employer for which you want to get the PaySchedule
  # @param pay_period The PayPeriod (ie, Monthly) that you want to retrieve details for.
  # @param tax_year The year that you want to retrieve details for.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :ordinal Optionally specify the second, third, fourth (etc) PaySchedule for this PayPeriod. Defaults to 1 (first)
  # @return [PaySchedule]
  describe 'get_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_periods_pay_schedule
  # Get PaySchedulePeriods
  # Get the PaySchedulePeriods for PaySchedule specified.
  # @param employer_id The Id of the Employer for which you want to get the PaySchedule periods
  # @param pay_period The PayPeriod (ie, Monthly) that you want to retrieve details for
  # @param tax_year The year that you want to retrieve details for
  # @param ordinal Optionally specify the second, third, fourth (etc) PaySchedule for this PayPeriod. Defaults to 1 (first)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period_number Optionally specify a period number to get a result just for that period
  # @option opts [BOOLEAN] :include_events 
  # @return [Array<PaySchedulePeriod>]
  describe 'get_periods_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_pay_schedule
  # Update PaySchedule
  # Update PaySchedule for the PayPeriod.
  # @param employer_id The Id of the Employer for which you want to update the PaySchedule
  # @param pay_period The PayPeriod (ie, Monthly) that you want to update details for.
  # @param tax_year The year that the PaySchedule is for.
  # @param [Hash] opts the optional parameters
  # @option opts [PaySchedule] :body 
  # @option opts [Integer] :ordinal Optionally specify the second, third, fourth (etc) PaySchedule for this PayPeriod. Defaults to 1 (first)
  # @return [PaySchedule]
  describe 'save_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_pay_schedule_period_pay_schedule
  # Update PaySchedulePeriod
  # Update the PaymentDate for a PaySchedulePeriod.
  # @param employer_id The Id of the Employer for which you want to update the PaySchedulePeriod
  # @param pay_period The PayPeriod (ie, Monthly) that you want to update details for
  # @param tax_year The year that the PaySchedule is for
  # @param ordinal Specify the first, second, third (etc) PaySchedule for this PayPeriod.
  # @param period_number Specify the number of the period that you want to update the PaymentDate for
  # @param [Hash] opts the optional parameters
  # @option opts [PaySchedulePeriod] :body 
  # @return [PaySchedulePeriod]
  describe 'update_pay_schedule_period_pay_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
