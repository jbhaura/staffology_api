=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::WebhookApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'WebhookApi' do
  before do
    # run before each test
    @instance = SwaggerClient::WebhookApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhookApi' do
    it 'should create an instance of WebhookApi' do
      expect(@instance).to be_instance_of(SwaggerClient::WebhookApi)
    end
  end

  # unit tests for create_webhook
  # Create Webhook
  # Creates a new Webhook for the Employer.
  # @param employer_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Webhook] :body 
  # @return [nil]
  describe 'create_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_webhook
  # Delete Webhook
  # Deletes the specified Webhook.
  # @param employer_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_webhook
  # Get Webhook
  # Gets the Webhook specified.
  # @param employer_id The Id of the Employer to which the Webhook belongs.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'get_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_webhook
  # List Webhooks
  # Lists all Webhooks for an Employer.
  # @param employer_id The Id of the Employer for which you want to list Webhooks
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'index_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payload_webhook
  # Get WebhookPayload
  # Returns the specified WebhookPayload for this webhook
  # @param employer_id 
  # @param id 
  # @param payload_id 
  # @param [Hash] opts the optional parameters
  # @return [WebhookPayload]
  describe 'payload_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payloads_webhook
  # List WebhookPayloads
  # Returns a list of all WebhookPayloads for this webhook
  # @param employer_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_num 
  # @option opts [Integer] :page_size 
  # @return [Array<Item>]
  describe 'payloads_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sample_webhook
  # Sample Value
  # Returns an example of the data you can expect your end point to receive when a webhook is fired.
  # @param employer_id The Id of the Employer to which the Webhook belongs.
  # @param webhook_event The WebhookEvent that you want a sample value for.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sample_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_webhook
  # Update Webhook
  # Updates a Webhook for the Employer.
  # @param employer_id 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Webhook] :body 
  # @return [Webhook]
  describe 'update_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
