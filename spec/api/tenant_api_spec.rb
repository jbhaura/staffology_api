=begin
#Staffology Payroll API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1
Contact: duane@staffology.co.uk
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TenantApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TenantApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TenantApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TenantApi' do
    it 'should create an instance of TenantApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TenantApi)
    end
  end

  # unit tests for add_admin_user_tenant
  # Add Admin User
  # Adds the specified user as an admin for the Tenant
  # @param id The Id of the Tenant you want to remove the  admin User from.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [nil]
  describe 'add_admin_user_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_users_tenant
  # List Admin Users
  # Returns a list of admin users for the Tenant
  # @param id The Id of the Tenant you want to list admin Users for.
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'admin_users_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bill_tenant
  # Get Bill
  # Returns details of a UsageBill for a User of this Tenant
  # @param id The Id of the Tenant the bill belongs to.
  # @param year 
  # @param month 
  # @param bill_id The Id of the UsageBill.
  # @param [Hash] opts the optional parameters
  # @return [UsageBill]
  describe 'bill_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bills_tenant
  # Get Bills
  # Returns a list of UsageBill for Users of this Tenant, for the Year and Month supplied
  # @param id The Id of the Tenant you want to list bills for.
  # @param year 
  # @param month 
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'bills_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_bills_tenant
  # Create Bills for Period
  # Generates usage and creates bills for all Tenants\\n  Only available to SuperAdmins
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :month 
  # @option opts [Integer] :year 
  # @return [Array<Item>]
  describe 'create_bills_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_tenant
  # Create a Tenant
  # Use this method to create a new Tenant\\n  Only available to SuperAdmins
  # @param [Hash] opts the optional parameters
  # @option opts [Tenant] :body 
  # @return [Tenant]
  describe 'create_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disabled_tenant
  # Disable User Account
  # Disables (or re-enabled) a user account
  # @param id The Id of the Tenant.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body A message to show the user explaining why the account is disabled.
  # @option opts [BOOLEAN] :disabled Whether or not the account should be disabled.
  # @return [nil]
  describe 'disabled_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employer_creation_tenant
  # Enable Employer Creation
  # Enable (or disable) a user accounts ability to create new employers
  # @param id The Id of the Tenant.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :enabled Whether or not the account can create employers.
  # @return [nil]
  describe 'employer_creation_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employer_usage_tenant
  # Get Employer Usage
  # Returns all activity for the given Employer
  # @param id The Id of the Tenant.
  # @param employer_id The Id of the Employer.
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'employer_usage_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employer_users_tenant
  # Get Employer Users
  # Returns all users for the given Employer
  # @param id The Id of the Tenant.
  # @param employer_id The Id of the Employer.
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'employer_users_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tenant
  # Get a Tenant
  # If you are an administrator for a Tenant then you can retrieve the settings for it using this API call
  # @param id The Id of the Tenant you want to retrieve.
  # @param [Hash] opts the optional parameters
  # @return [Tenant]
  describe 'get_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_with_no_billable_activity_tenant
  # Get Users with no Billable Activity.
  # Returns a .csv file containing users created in or before the given month that do not have billable activity.
  # @param id The Id of the Tenant
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :month 
  # @option opts [Integer] :year 
  # @return [ReportResponse]
  describe 'get_users_with_no_billable_activity_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_admin_user_tenant
  # Remove Admin User
  # Removes the specified admin user for the Tenant
  # @param id The Id of the Tenant you want to remove the  admin User from.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [nil]
  describe 'remove_admin_user_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_accounting_id_tenant
  # Set User Accounting Id
  # Updates the Customer Accounting Id for a user
  # @param id The Id of the Tenant.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accounting_id The CustomerAccountingId for the user.
  # @return [nil]
  describe 'set_accounting_id_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_bureau_redirect_email_address_tenant
  # Set Bureau Redirect
  # Sets or removes the redirect email address for a users Bureau-related notifications
  # @param id The Id of the Tenant.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email_address The email address to redirect to, or an empty string to remove the redirect.
  # @return [nil]
  describe 'set_bureau_redirect_email_address_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_tenant_tenant
  # Set User Tenant
  # Changes the Tenant for a User. Only applicable if you manage two or more Tenants
  # @param id The Id of the Tenant the user is currently assigned to.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :new_tenant_id The Id of the Tenant the user is to be assigned to.
  # @return [nil]
  describe 'set_tenant_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_bill_tenant
  # Update Bill
  # Updates the UsageBill.
  # @param id The Id of the Tenant the bill belongs to.
  # @param year 
  # @param month 
  # @param bill_id The Id of the UsageBill.
  # @param [Hash] opts the optional parameters
  # @option opts [UsageBill] :body 
  # @return [UsageBill]
  describe 'update_bill_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_css_colors_tenant
  # Update CSS Colors
  # Update the colors for a Tenant
  # @param id The Id of the Tenant you want to update.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<StringStringKeyValuePair>] :body 
  # @return [Array<StringStringKeyValuePair>]
  describe 'update_css_colors_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_css_tenant
  # Update CSS
  # Update the custom CSS for a Tenant
  # @param id The Id of the Tenant you want to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [String]
  describe 'update_css_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_fav_icon_tenant
  # Upload Favicon
  # Upload an image to use as favicon. We&#x27;ll upload it and set the URL on the FavIcon property of the Tenant.
  # @param id The Id of the Tenant you want to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :file 
  # @return [Tenant]
  describe 'update_fav_icon_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_logo_tenant
  # Upload Logo
  # Upload an image to use as your main logo. We&#x27;ll upload it and set the URL on the HomeImgUrl property of the Tenant.
  # @param id The Id of the Tenant you want to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :file 
  # @return [Tenant]
  describe 'update_logo_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tenant
  # Update a Tenant
  # If you are an administrator for a Tenant then you can update the settings for it using this API call
  # @param id The Id of the Tenant you want to update.
  # @param [Hash] opts the optional parameters
  # @option opts [Tenant] :body 
  # @return [Tenant]
  describe 'update_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for usage_tenant
  # Get Usage
  # Returns activity for Users of this Tenant, for the Year and Month supplied
  # @param id The Id of the Tenant.
  # @param year 
  # @param month 
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'usage_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_bills_tenant
  # Get User Bills
  # Returns all UsageBills for a User
  # @param id The Id of the Tenant you want to get a Users UsageBills for.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'user_bills_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_employers_tenant
  # Get User Employers
  # Returns Employer details for a User that belongs to the Tenant
  # @param id The Id of the Tenant you want to get User Employers for.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<Item>]
  describe 'user_employers_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_tenant
  # Get a User
  # Returns details of a User that belongs to the Tenant
  # @param id The Id of the Tenant you want to get a User for.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'user_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_search_tenant
  # Search Users
  # Returns a list of users for the Tenant that match the search
  # @param id The Id of the Tenant you want to search Users for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q 
  # @return [Array<Item>]
  describe 'users_search_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_tenant
  # List Users
  # Returns a list of users for the Tenant
  # @param id The Id of the Tenant you want to list Users for.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_num 
  # @option opts [Integer] :page_size 
  # @option opts [BOOLEAN] :sort_by_last_login 
  # @return [Array<Item>]
  describe 'users_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for weekly_activity_tenant
  # Weekly Activity Report
  # Returns a report detailing User activity, summarised by week, for the given date range
  # @param id The Id of the Tenant
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :from_date 
  # @option opts [DateTime] :to_date 
  # @option opts [String] :accept 
  # @return [ReportResponse]
  describe 'weekly_activity_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
